type Consultation {
  id: String!
  callerId: String!
  userIds: [String!]!
}

type Patient {
  id: String!
  firstName: String!
  lastName: String!
  phoneNumber: String!
  disease: String!
  lastVisit: String
  treatment: [PatientEvent!]!
  color: String!
}

type User {
  email: String!
  id: String!
  specialization: String!
  firstName: String!
  lastName: String!
  avatar: String
  online: Boolean!
}

type Visit {
  from_: String!
  to_: String!
  id: String!
  notes: String
  patientId: String!
}

type RemovedVisit {
  id: String!
}

type RemovedPatient {
  id: String!
}

type Call {
  id: String!
  duration: Float!
  timestamp: Float!
  answered: Boolean!
  from_: User!
  to_: User!
}

type Query {
  me: User!
  calls: [Call!]!
  searchSpecialist(
    specialization: String!
    firstName: String
    lastName: String!
  ): [User!]!

  patients: [Patient!]!
  patient(id: String!): Patient!
  visits: [Visit!]!
  symptoms(patientId: String!): [Symptom!]!
  feelings(patientId: String!): [Feeling!]!
  patientEvents(patientId: String!): [PatientEvent!]!
  consultations: [Consultation!]!
  users: [User!]!
  consultation(id: String!): Consultation
}

type Feeling {
  id: String!
  patientId: String!
  value: String!
  timestamp: Float!
}

type PatientEvent {
  id: String!
  symptompId: String!
  feeling: Float!
  timestamp: Float!
}

type Symptom {
  id: String!
  name: String!
  date: String!
  circumstances: String!
  description: String!
  occurences: String!
  causedBy: String!
  notes: String!
  color: String!
}

type Room {
  doctorId: String!
  patientId: String!
  id: String!
}

type Mutation {
  signIn(email: String!, password: String!): String
  signUp(email: String!, password: String!): User
  createVisit(
    patientId: String!
    from_: String!
    to_: String!
    notes: String
  ): Visit

  removeVisit(id: String!): RemovedVisit!

  createPatient(
    firstName: String!
    lastName: String!
    phoneNumber: String!
    disease: String!
    color: String!
    lastVisit: String
  ): Patient!

  removePatient(id: String!): RemovedPatient!
  addFeeling(patientId: String!, value: String!, timestamp: Float!): Feeling!
  addPatientEvent(
    patientId: String!
    symptompId: String!
    feeling: Float!
    timestamp: Float!
  ): PatientEvent!

  addSymptom(
    patientId: String!
    name: String
    date: String
    circumstances: String
    description: String
    occurences: String
    causedBy: String
    notes: String
    color: String
  ): Symptom!

  createRoom(patientId: String!, doctorId: String!): Room
  createConsultation(userIds: [String!]!, callerId: String!): Consultation
  decline(id: String!, userIds: [String!]!, callerId: String!): Consultation
}
